@page "/login"
@inject UserService _userService
@inject NavigationManager NavManager
@rendermode InteractiveServer
<PageTitle>Productos</PageTitle>

<div class="row justify-content-center">
    <div class="col-md-5 col-12 mt-4">
        <h3 class="mb-2 text-center">Login usuario</h3>
        <div class="mb-3">
            <label class="form-label">Usuario</label>
            <input @bind="Usuario" class="form-control" placeholder="User o email" />
        </div>

        <div class="mb-3">
            <label class="form-label">Contraseña</label>
            <input @bind="Pass" class="form-control" placeholder="******" />
        </div>
        @if(!_log)
        {
            <p class="my-2" style="color:red">Usuario o contraseña invalido</p>
        }

        <div class="d-flex align-items-center mb-3 gap-3 ">
            <button @onclick="() => Ingreso()" class="btn btn-primary">Ingresar</button>
            <a href="/Default">Regresar</a>
        </div>
        <p class="mt-3 text-center">No tiene una <strong>cuenta</strong>? ir a <a style="color: dodgerblue" href="/registro"><strong>Registrarse</strong></a></p>
    </div>
</div>


@code {
    private bool _log { get; set; }

    private string Usuario { get; set; }

    private string Pass { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _log = true;
    }

    private async Task Ingreso()
    {
        var user = await _userService.Login(Usuario, Pass);

        if (user != null)
            NavManager.NavigateTo("/default");
        else
            _log = false;

    }

}
