@page "/registro"
@inject UserService _userService
@inject NavigationManager NavManager
@rendermode InteractiveServer
<PageTitle>Productos</PageTitle>

<EditForm Model="_usuario" OnSubmit="Registrar">
    <div class="row justify-content-center">
        <div class="col-md-5 col-12 mt-4">
            <h3 class="mb-2 text-center">Registro usuario</h3>
            <div class="mb-3">
                <label class="form-label">Usuario</label>
                <input @bind="Email" type="email" class="form-control" placeholder="User o email" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Contraseña</label>
                <input @bind="Pass" class="form-control" placeholder="******" />
            </div>
            @if (!_log)
            {
                <p class="my-2" style="color:red">Ya existe un usuario con este email</p>
            }

            <div class="d-flex align-items-center mb-3 gap-3 ">
                <button type="submit" class="btn btn-primary">Registrarse</button>
                <a href="/Default">Regresar</a>
            </div>
            <p class="mt-3 text-center">Ya tiene una <strong>cuenta</strong>? ir a <a style="color: dodgerblue" href="/login"><strong>Ingresar</strong></a></p>
        </div>
    </div>
</EditForm>

@code {
    private bool _log { get; set; }

    private User _usuario { get; set; } = new();

    private string Email { get; set; }

    private string Pass { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _log = true;
    }

    public async Task Registrar()
    {
        var newUser = await _userService.RegistrarUserAsyc(Email, Pass);

        if (newUser != null)            
            NavManager.NavigateTo("/default");
        else
            _log = false;
    }


}
